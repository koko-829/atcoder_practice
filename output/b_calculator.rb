- [**B - Calculator**](https://atcoder.jp/contests/abc386/tasks/abc386_b)
    - 書いてみたコード(コード長：38Byte, 処理速度：129ms)
        
        ```ruby
        puts gets.chomp.gsub("00", "0").length
        ```
        
    - [良さげ別解](https://atcoder.jp/contests/abc386/submissions/61162248)(コード長：32Byte, 処理速度：44ms)
        
        ```ruby
        p gets.chomp.gsub('00', ?0).size
        ```
        
    - 比較何かしらアウトプット
        - 自コード
            - 入力内容の数字が電卓のボタンで何回押せば表示できるかっていう感じの問題。
            - ”00”だけ唯一1回で二桁分押せるボタンやから、gsub使用して、”00”を0に変えてみた感じ。
            - “00”を”0”にさえ変えて終えば、あとはその数字の数を求めればいいだけやから、to_iは最後までする必要なく文字列の長さとしてlengthを求めてる感じ。
        - 別解コード
            - gsubの第二引数を`?0`にしただけでなんでこんなに計算量変わる？？
            - 私みたいに“0”ってしてる場合は、”0”に変換されるたびに新しい文字列オブジェクトが作成されてる(前、文字列に関して私が記事にしてみたやつと同じですな)
            - で、この`?0` っていうのは文字リテラル？これで作成したら最適化されるらしい。ってことは既に一回作られて”0”って文字列が存在する場合は、それと同じやつを参照できるから、新しくオブジェクトとして作成する必要がないとかそういうことかな？

### 以上！！