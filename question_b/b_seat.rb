# 最初に大まかな解法を考える。
# 今回みたいな図形かつ問題の意味がわからないやつ、一回読んで理解できなかったら、もう問題文は読まない。
# 入力例と出力例を見て、ひたすら隠れてる仕組みを探してみる。
# まだこの段階ではメソッドとか考えなくても良い。それをできるかできないかは置いといて、「もしその処理ができたら上手くいきそう」を分解して考えてみる。


# 例えば…
# 「出力結果上下反転になってるな…」=> 変換処理は真ん中までだけ行って、あとはそれを後半に反転させたらいけそう。
# 「◯から◯の変換ってところだけにフォーカスして順番にたどっていくと、###が続いてるところは端以外を.に、...って続いてるところは端以外を#に。これを繰り返してるだけ？」
# 「入力例2の説明を見ると、書いてることはよくわからんけど、先に###だけで図形を作ってしまった方ができそう」

#=> 「とりあえず全部#で出力してみる」=>「上半分だけを変換する」=>「最後に下半分にそれを反転させる」の3つに分けたらいけそうと予想を立ててから書いてみる。
---
# まずどうやって#の列を作成する？今後全部入力値は5にして考えるよ。
n = gets.to_i #入力値をとってきて…
# n*n列の#を作成すればいいわけやから…
arr = Array.new(n) { "#" * n }
# これやね。これをputsで確認してみると…
puts arr
#=>
#####
#####
#####
#####
#####

# データとしては配列になっている
p arr
#=> ["#####", "#####", "#####", "#####", "#####"]

# ちゃんとできてますな。私は下みたいに書いていたせいでうまくいってなかったみたい。
# 下は間違い。
arr = ["#"* n] * n





---
# 次に考えること。
# 左半分を右半分側に反転することができるか。
# もしこれができたら変換の反復処理は真ん中までだけ行って、
# あとはそれを後半部分に反転すればいいだけになる。

#最初この状態。
["#####","#####","#####","#####","#####"]

#前半部分まで規則に従って変換したやつ
["#####", "#...#", "#.#.#", "#####", "#####"]

#で、これが下みたいになってくれたらいい。
["#####", "#...#", "#.#.#", "#...#", "#####"]



arr = ["#####", "#...#", "#.#.#", "#####", "#####"]
arr[2..4] = arr[0..2].reverse
puts arr

# できた！！じゃあこれどんなnでも適用させるには？
#　まず配列の要素数を使う。(問題でいうとこれは入力値N)
# 「arrの半分の位置(n/2)から、最後の要素(-1)」を「arrの最初の位置(0)から半分位置(n/2)が反転したもの」に変換させる
arr[n/2..-1] = arr[0..n/2].reverse
# でもこれやとlenが偶数の場合おかしくなってしまう。やから偶数の場合は、
arr[n/2..-1] = arr[0..n/2-1].reverse

["####","#..#","####","####"]
["####","#..#","#..#","####"]
#ということで、最後にする処理は、
if n.even?
  arr[n/2..-1] = arr[0..n/2-1].reverse
else
  arr[n/2..-1] = arr[0..n/2].reverse
end
puts arr
#になるってことがわかる。
---


n = gets.to_i
arr = Array.new(n) { "#" * n }
(1..n/2).each do |i|
  # 中身の半分までを変える処理
end
# 左半分を反転して右半分に反映させる処理

---
### 今までのをまとめると、こんな感じ。

n = gets.to_i
arr = ["#"* n] * n

# 中身の半分までを変える処理

arr[n/2..-1] = arr[0..n/2-1].reverse
else
  arr[n/2..-1] = arr[0..n/2].reverse
end
puts arr
---

# じゃあ最後肝心な変換処理の部分を考える。
n = gets.to_i
arr = Array.new(n) { "#" * n }
(1..n/2).each do |i|
  change = n - i * 2
  word = i.even? ? "#" : "."
  (i..n/2).each do |s|
    arr[s][i,change] = word * change
  end
end
if n.even?
  arr[n/2..-1] = arr[0..n/2-1].reverse
else
  arr[n/2..-1] = arr[0..n/2].reverse
end
puts arr








arr = ["####","####","####","####"]
(1..2).each do |i|
arr[i][1,2] = "." * 2
end
puts arr










n = gets.to_i
arr = ["#"* n] * n
(1..n/2).each do |i|
  change = n - i * 2
  word = i.even? ? "#" : "."
  arr[i][i,change] = word * change
  end
puts arr
# 左半分を反転して右半分に反映させる処理
arr[n/2..-1] = arr[0..n/2].reverse
puts arr


n = gets.to_i
n.times do

end